{#
# GNU MediaGoblin -- federated, autonomous media hosting
# Copyright (C) 2011, 2012 MediaGoblin contributors.  See AUTHORS.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#}
{% extends "mediagoblin/base.html" %}

{% from "dogma/utils/album_items.html" import collection_gallery %}

{% block mediagoblin_head %}
    <link rel="stylesheet" type="text/css"
          href="{{ request.staticdirect('/dogma/css/player/style.css') }}">
    <link rel="alternate" type="application/atom+xml"
          href="{{ request.urlgen(
                       'mediagoblin.user_pages.atom_feed')
                        }}">
  <script type="text/javascript">
      var playlist = [
              {% for my_media in medias %}
                  {0:{src:"/mgoblin_media/{{my_media['path']}}",type:"audio/ogg"}, 
                  config:{title:"{{my_media['title']}}"}},
              {% endfor %}
          ]
  </script>
  <script type="text/javascript"
          src="{{ request.staticdirect('/dogma/js/player/projekktor.min.js') }}"></script>
  <script type="text/javascript"
          src="{{ request.staticdirect('/dogma/js/player/projekktor.custom_params.js') }}"></script>

{% endblock mediagoblin_head %}

{% block title %}
  {%- trans collection_title=collection.title
    -%}
    {{ collection_title }}
  {%- endtrans %} &mdash; {{ super() }}
{% endblock %}

{% block mediagoblin_content -%}
  <audio id="main_player"></audio>
  <ul id="current_playlist"> </ul>
  <h1>
      {{ collection_title }}
  </h1>
  {% if request.user and (collection.creator == request.user.id or 
                                                request.user.is_admin) %}
    {% set edit_url = request.urlgen('mediagoblin.edit.edit_collection',
                                     user=collection.get_creator.username,
                                     collection=collection.slug) %}
    <a class="button_action" href="{{ edit_url }}">{% trans %}Edit{% endtrans %}</a>
    {% set delete_url = request.urlgen('mediagoblin.user_pages.collection_confirm_delete',
                          user=collection.get_creator.username,
                          collection=collection.slug) %}
    <a class="button_action" href="{{ delete_url }}">{% trans %}Delete{% endtrans %}</a>
  {% endif %}

  <p>
    {% autoescape False %}
      {{ collection.description_html }}
    {% endautoescape %}
  </p>
  <div id="album_player"></div>

  {{ collection_gallery(request, collection_items) }}
    
  {% set feed_url = request.urlgen('mediagoblin.user_pages.collection_atom_feed',
                                   collection=collection.slug ) %}
  {% include "mediagoblin/utils/feed_link.html" %}
    
{% endblock %}    
